<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="originalContent" value="# Cucumber + TestNG + Allure Automation Project&#10;&#10;This project demonstrates automated UI testing for [saucedemo.com](https://www.saucedemo.com/) using:&#10;- **Cucumber** for BDD feature files&#10;- **TestNG** as the test runner&#10;- **Selenium WebDriver** for browser automation&#10;- **Allure** for advanced reporting&#10;- **WebDriverManager** for driver management&#10;&#10;## Project Structure&#10;- `src/test/resources/features/` - Cucumber feature files&#10;- `src/test/java/stepdefinitions/` - Step definitions for Cucumber steps&#10;- `src/test/java/pages/` - Page Object Model classes&#10;- `src/test/java/runner/` - TestNG runner for Cucumber&#10;- `pom.xml` - Maven dependencies and plugins&#10;- `allure-results/` - Allure results after test execution&#10;&#10;## How to Run&#10;1. **Install dependencies:**&#10;   ```sh&#10;   mvn clean install&#10;   ```&#10;2. **Run tests:**&#10;   ```sh&#10;   mvn test&#10;   ```&#10;3. **Generate Allure report:**&#10;   - Make sure you have [Allure commandline](https://docs.qameta.io/allure/#_installing_a_commandline) installed.&#10;   - Run:&#10;     ```sh&#10;     allure serve allure-results&#10;     ```&#10;   - This will open the Allure report in your browser.&#10;&#10;## Sample Feature&#10;The project includes a scenario outline for login with multiple users:&#10;```&#10;Scenario Outline: Successful login with valid credentials&#10;  Given I am on the saucedemo login page&#10;  When I login with username &quot;&lt;username&gt;&quot; and password &quot;&lt;password&gt;&quot;&#10;  Then I should see the products page&#10;&#10;  Examples:&#10;    | username        | password      |&#10;    | standard_user   | secret_sauce  |&#10;    | locked_out_user | secret_sauce  |&#10;    | problem_user    | secret_sauce  |&#10;```&#10;&#10;## Notes&#10;- Allure screenshots are attached for key steps and failures.&#10;- Update the Java version in `pom.xml` if you encounter build issues.&#10;- You can add more feature files and step definitions as needed.&#10;&#10;---&#10;&#10;Feel free to extend this project for your own UI automation needs!&#10;&#10;" />
              <option name="updatedContent" value="# Cucumber + TestNG + Allure Automation Project&#10;&#10;This project demonstrates automated UI testing for [saucedemo.com](https://www.saucedemo.com/) using:&#10;- **Cucumber** for BDD feature files&#10;- **TestNG** as the test runner&#10;- **Selenium WebDriver** for browser automation&#10;- **Allure** for advanced reporting&#10;- **WebDriverManager** for driver management&#10;&#10;## Project Structure&#10;- `src/test/resources/features/` - Cucumber feature files&#10;- `src/test/java/stepdefinitions/` - Step definitions for Cucumber steps&#10;- `src/test/java/pages/` - Page Object Model classes&#10;- `src/test/java/runner/` - TestNG runner for Cucumber&#10;- `pom.xml` - Maven dependencies and plugins&#10;- `allure-results/` - Allure results after test execution&#10;&#10;## How to Run&#10;1. **Install dependencies:**&#10;   ```sh&#10;   mvn clean install&#10;   ```&#10;2. **Run tests:**&#10;   ```sh&#10;   mvn test&#10;   ```&#10;3. **Generate Allure report:**&#10;   - Make sure you have [Allure commandline](https://docs.qameta.io/allure/#_installing_a_commandline) installed.&#10;   - Run:&#10;     ```sh&#10;     allure serve allure-results&#10;     ```&#10;   - This will open the Allure report in your browser.&#10;&#10;## Sample Feature&#10;&#10;The project includes a scenario outline for login with multiple users. Below is an example:&#10;&#10;```gherkin&#10;Scenario Outline: Navigate to Learning Materials, Sign Up, and Login&#10;  Given I am on the Ndosi Automation homepage&#10;  When I click on the &quot;Learning Materials&quot; tab&#10;  And I click on the &quot;Sign Up&quot; button&#10;  And I fill in the registration form with valid details&#10;    | Field           | Value            |&#10;    | FirstName       | &lt;FirstName&gt;      |&#10;    | LastName        | &lt;LastName&gt;       |&#10;    | Email           | &lt;Email&gt;          |&#10;    | Password        | &lt;Password&gt;       |&#10;    | ConfirmPassword | &lt;ConfirmPassword&gt; |&#10;  And I submit the registration form&#10;  Then I should see a confirmation message &quot;Registration successful! Please login with your credentials.&quot;&#10;  When I enter my password to log in&#10;  And I submit the login form&#10;  Then I should be logged in and see the page title &quot;Practice Assessments&quot;&#10;&#10;Examples:&#10;  | FirstName | LastName | Email            | Password | ConfirmPassword |&#10;  | Tata      | Mk       | TMK@example.com  | Pass1234 | Pass1234        |&#10;  | John      | Doe      | john.doe@test.com| Test1234 | Test1234        |&#10;```&#10;&#10;## Notes&#10;- Allure screenshots are attached for key steps and failures.&#10;- Update the Java version in `pom.xml` if you encounter build issues.&#10;- You can add more feature files and step definitions as needed.&#10;&#10;---&#10;&#10;Feel free to extend this project for your own UI automation needs!" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/java/runner/TestRunner.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/java/runner/TestRunner.java" />
              <option name="originalContent" value="package runner;&#10;&#10;import io.cucumber.testng.AbstractTestNGCucumberTests;&#10;import io.cucumber.testng.CucumberOptions;&#10;&#10;@CucumberOptions(&#10;        features = &quot;src/test/resources/features&quot;,&#10;        glue = {&quot;stepdefinitions&quot;, &quot;pages&quot;},&#10;        plugin = {&quot;pretty&quot;, &quot;html:target/cucumber-report.html&quot;}&#10;)&#10;public class TestRunner extends AbstractTestNGCucumberTests {&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package runner;&#10;&#10;import io.cucumber.testng.AbstractTestNGCucumberTests;&#10;import io.cucumber.testng.CucumberOptions;&#10;&#10;@CucumberOptions(&#10;        features = &quot;src/test/resources/features&quot;,&#10;        glue = {&quot;stepdefinitions&quot;, &quot;pages&quot;},&#10;        plugin = {&#10;            &quot;pretty&quot;,&#10;            &quot;html:target/cucumber-report.html&quot;,&#10;            &quot;io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm&quot;&#10;        }&#10;)&#10;public class TestRunner extends AbstractTestNGCucumberTests {&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/java/stepdefinitions/LoginSteps.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/java/stepdefinitions/LoginSteps.java" />
              <option name="originalContent" value=" package stepdefinitions;&#10;&#10;import io.cucumber.java.en.Given;&#10;import io.cucumber.java.en.When;&#10;import io.cucumber.java.en.Then;&#10;import io.qameta.allure.Allure;&#10;import org.openqa.selenium.OutputType;&#10;import org.openqa.selenium.TakesScreenshot;&#10;import org.openqa.selenium.WebDriver;&#10;import org.openqa.selenium.chrome.ChromeDriver;&#10;import io.github.bonigarcia.wdm.WebDriverManager;&#10;import pages.LoginPage;&#10;import org.testng.Assert;&#10;&#10;import java.io.ByteArrayInputStream;&#10;&#10; public class LoginSteps {&#10;    private WebDriver driver;&#10;    private LoginPage loginPage;&#10;&#10;    @Given(&quot;I am on the saucedemo login page&quot;)&#10;    public void i_am_on_the_saucedemo_login_page() {&#10;        WebDriverManager.chromedriver().setup();&#10;        driver = new ChromeDriver();&#10;        driver.get(&quot;https://www.saucedemo.com/&quot;);&#10;        driver.manage().window().maximize();&#10;        loginPage = new LoginPage(driver);&#10;        Allure.addAttachment(&quot;Login Page&quot;,new ByteArrayInputStream(((TakesScreenshot)driver).getScreenshotAs(OutputType.BYTES)));&#10;    }&#10;&#10;    @When(&quot;I login with username {string} and password {string}&quot;)&#10;    public void i_login_with_username_and_password(String username, String password) {&#10;        loginPage.login(username, password);&#10;        if(username == &quot;locked_out_user&quot;){&#10;            Allure.addAttachment(&quot;Login Page Error&quot;,new ByteArrayInputStream(((TakesScreenshot)driver).getScreenshotAs(OutputType.BYTES)));&#10;            driver.quit();&#10;        }&#10;    }&#10;&#10;    @Then(&quot;I should see the products page&quot;)&#10;    public void i_should_see_the_products_page() {&#10;        Assert.assertTrue(driver.getCurrentUrl().contains(&quot;inventory.html&quot;));&#10;        Allure.addAttachment(&quot;Product Page&quot;,new  ByteArrayInputStream(((TakesScreenshot)driver).getScreenshotAs(OutputType.BYTES)));&#10;        driver.quit();&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value=" package stepdefinitions;&#10;&#10;import io.cucumber.java.en.Given;&#10;import io.cucumber.java.en.When;&#10;import io.cucumber.java.en.Then;&#10;import io.qameta.allure.Allure;&#10;import org.openqa.selenium.OutputType;&#10;import org.openqa.selenium.TakesScreenshot;&#10;import org.openqa.selenium.WebDriver;&#10;import org.openqa.selenium.chrome.ChromeDriver;&#10;import io.github.bonigarcia.wdm.WebDriverManager;&#10;import pages.LoginPage;&#10;import org.testng.Assert;&#10;&#10;import java.io.ByteArrayInputStream;&#10;&#10; public class LoginSteps {&#10;    private WebDriver driver;&#10;    private LoginPage loginPage;&#10;&#10;    @Given(&quot;I am on the saucedemo login page&quot;)&#10;    public void i_am_on_the_saucedemo_login_page() {&#10;        WebDriverManager.chromedriver().setup();&#10;        driver = new ChromeDriver();&#10;        driver.get(&quot;https://www.saucedemo.com/&quot;);&#10;        driver.manage().window().maximize();&#10;        loginPage = new LoginPage(driver);&#10;        Allure.addAttachment(&quot;Login Page&quot;,new ByteArrayInputStream(((TakesScreenshot)driver).getScreenshotAs(OutputType.BYTES)));&#10;    }&#10;&#10;    @When(&quot;I login with username {string} and password {string}&quot;)&#10;    public void i_login_with_username_and_password(String username, String password) {&#10;        loginPage.login(username, password);&#10;        if(username == &quot;locked_out_user&quot;){&#10;            Allure.addAttachment(&quot;Login Page Error&quot;,new ByteArrayInputStream(((TakesScreenshot)driver).getScreenshotAs(OutputType.BYTES)));&#10;            driver.quit();&#10;        }&#10;    }&#10;&#10;    @Then(&quot;I should see the products page&quot;)&#10;    public void i_should_see_the_products_page() {&#10;        Assert.assertTrue(driver.getCurrentUrl().contains(&quot;inventory.html&quot;));&#10;        Allure.addAttachment(&quot;Product Page&quot;,new  ByteArrayInputStream(((TakesScreenshot)driver).getScreenshotAs(OutputType.BYTES)));&#10;        driver.quit();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/resources/features/Login.feature">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/resources/features/Login.feature" />
              <option name="originalContent" value="Feature: Login to saucedemo&#10;  Scenario: Successful login with valid credentials&#10;    Given I am on the saucedemo login page&#10;    When I login with username &quot;standard_user&quot; and password &quot;secret_sauce&quot;&#10;    Then I should see the products page&#10;&#10;" />
              <option name="updatedContent" value="Feature: Login to saucedemo&#10;&#10;  Scenario Outline: Successful login with valid credentials&#10;    Given I am on the saucedemo login page&#10;    When I login with username &quot;&lt;username&gt;&quot; and password &quot;&lt;password&gt;&quot;&#10;    Then I should see the products page&#10;&#10;    Examples:&#10;      | username        | password      |&#10;      | standard_user   | secret_sauce  |&#10;      | locked_out_user | secret_sauce  |&#10;      | problem_user    | secret_sauce  |" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/resources/features/Registration.feature">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/resources/features/Registration.feature" />
              <option name="originalContent" value="Feature: Sign Up and Login  on Ndosi Automation&#10;&#10;&#10;  Scenario: Navigate to Learning Materials, Sign Up, and Login&#10;    Given I am on the Ndosi Automation homepage&#10;    When I click on the &quot;Learning Materials&quot; tab&#10;    And I click on the &quot;Sign Up&quot; button&#10;    And I fill in the registration form with valid details&#10;      | Field           | Value            |&#10;      | FirstName       | Tata             |&#10;      | LastName        | Mk            |&#10;      | Email           | TMK@example.com |&#10;      | Password        | Pass1234         |&#10;      | ConfirmPassword | Pass1234         |&#10;    And I submit the registration form&#10;    Then I should see a confirmation message &quot;Registration successful! Please login with your credentials.&quot;&#10;    When I enter my password to log in&#10;    And I submit the login form&#10;    Then I should be logged in and see the page title &quot;Practice Assessments&quot;&#10;" />
              <option name="updatedContent" value="Feature: Sign Up and Login  on Ndosi Automation&#10;&#10;&#10;  Scenario: Navigate to Learning Materials, Sign Up, and Login&#10;    Given I am on the Ndosi Automation homepage&#10;    When I click on the &quot;Learning Materials&quot; tab&#10;    And I click on the &quot;Sign Up&quot; button&#10;    And I fill in the registration form with valid details&#10;      | Field           | Value            |&#10;      | FirstName       | Tata             |&#10;      | LastName        | Mk            |&#10;      | Email           | TMK@example.com |&#10;      | Password        | Pass1234         |&#10;      | ConfirmPassword | Pass1234         |&#10;    And I submit the registration form&#10;    Then I should see a confirmation message &quot;Registration successful! Please login with your credentials.&quot;&#10;    When I enter my password to log in&#10;    And I submit the login form&#10;    Then I should be logged in and see the page title &quot;Practice Assessments&quot;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>